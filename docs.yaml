openapi: '3.0.2'
info:
  title: Golden Marc API
  version: '1.0'
servers:
  - url: http://localhost:4000  
paths:
  /auth/create-user:
    post:
      tags: 
        - Autenticacion
      summary: Registrar usuarios
      requestBody:
        description: Crea un usuario, regresando la informacion del mismo junto con el token.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstname:
                  type: string
                lastname:
                  type: string
                username:
                  type: string
                password:
                  type: string
                role:
                  type: string
                key_office:
                  type: string
      responses:
        '200':
          description: Creacion de usuario correcta.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWithToken'
        '400':
          description: Faltaron propiedades en el body, o no se cumplio con alguna regla de validación.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '404':
          description: No existe el usuario.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '5XX':
          description: Error interno del servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /auth/login:
    post:
      tags: 
        - Autenticacion
      summary: Inicio de sesion
      requestBody:
        description: Inicia sesion, y crea un token.
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Inicio de sesion correcto
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWithToken'
        '400':
          description: Faltaron propiedades en el body, o no se cumplio con alguna regla de validación.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '403':
          description: Faltaron propiedades en el body, o no se cumplio con alguna regla de validación.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: No existe el usuario.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '5XX':
          description: Error interno del servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /auth/renew-token:
    get:
      tags: 
        - Autenticacion
      summary: Obtiene la informacion del usuario y retorna un nuevo token.
      security: 
        - bearerAuth: []
      responses:
        '200':
          description: Renovacion de token correcta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWithToken'
        '400':
          description: Hubo un error al validar el token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '5XX':
          description: Error interno del servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /managment/create-office:
    post:
      tags: 
        - Gestion 
      summary: Crear oficina
      security:
        - bearerAuth: []
      requestBody:
        description: Crea una oficina.
        content:
          application/json:
            schema:
              type: object
              properties:
                key_office:
                  type: string
                name:
                  type: string
      responses:
        '200':
          description: Creacion de oficina correcta.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWithToken'
        '400':
          description: Faltaron propiedades en el body, o no se cumplio con alguna regla de validación.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '5XX':
          description: Error interno del servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /managment/find-all-offices:
    get:
      tags: 
        - Gestion 
      summary: Listar todas las oficinas.
      security:
        - bearerAuth: []
      parameters: 
        - in: query
          name: page 
          schema: 
            type: number 
          description: Numero de pagina 
        - in: query
          name: size
          schema: 
            type: number 
          description: Tamaño de la pagina
      responses:
        '200':
          description: Listado de oficinas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfficePage'
        '400':
          description: Faltaron propiedades en el body, o no se cumplio con alguna regla de validación.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '5XX':
          description: Error interno del servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /managment/find-office:
    get:
      tags: 
        - Gestion 
      summary: Encontrar una oficina o sucursal.
      security:
        - bearerAuth: []
      parameters: 
        - in: query
          name: id 
          schema: 
            type: number 
          description: Id de la oficina
        - in: query
          name: keyOffice
          schema: 
            type: number 
          description: Clave de la oficina
        - in: query
          name: name 
          schema:
            type: string 
          description: Nombre de la oficina
      responses:
        '200':
          description: Listado de oficinas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Office'
        '204':
          description: No se encontro ninguna oficina o sucursal.
        '400':
          description: Faltaron propiedades en el body, o no se cumplio con alguna regla de validación.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '5XX':
          description: Error interno del servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /managment/find-all-places:
    get:
      tags: 
        - Gestion 
      summary: Listar todos los lugares donde se puede viajar.
      security:
        - bearerAuth: []
      parameters: 
        - in: query
          name: page 
          schema: 
            type: number 
          description: Numero de pagina 
        - in: query
          name: size
          schema: 
            type: number 
          description: Tamaño de la pagina
      responses:
        '200':
          description: Listado de lugares
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacePage'
        '400':
          description: Faltaron propiedades en el body, o no se cumplio con alguna regla de validación.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '5XX':
          description: Error interno del servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /managment/create-place:
    post:
      tags: 
        - Gestion 
      summary: Crea un nuevo destino para viajar.
      security:
        - bearerAuth: []
      requestBody:
        description: Crea un nuevo destino para viajar.
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          description: Retorna el nuevo objeto del destino.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Place'
        '400':
          description: Faltaron propiedades en el body, o no se cumplio con alguna regla de validación.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '5XX':
          description: Error interno del servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    UserWithToken:
      type: object
      properties:
        id:
          type: number
        firstName:
          type: string
        lastName:
          type: string
        userName:
          type: string
        role:
          type: number
        key_office:
          type: number
        token:
          type: string
    ValidationError:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              message:
                type: string
              attribute:
                type: array
                items:
                  type: string
    Error: 
      type: object
      properties:
        error: 
          type: string
    Office:
      type: object
      properties:
        id:
          type: number
        key_office:
          type: string
        name:
          type: string
    Pagination: 
      type: object
      properties:
        currentPage:
          type: number 
        nextPage: 
          type: number
        previousPage:
          type: number
        totalPages: 
          type: number
    OfficePage:
      allOf:
        - $ref: "#/components/schemas/Pagination"
        - type: object
          properties:
            offices:
              $ref: "#/components/schemas/Office"
    Place:
      type: object
      properties:
        id: 
          type: number
        name: 
          type: string
    PlacePage:
      allOf:
        - $ref: "#/components/schemas/Pagination"
        - type: object
          properties:
            places:
              $ref: "#/components/schemas/Place"
  securitySchemes:
    bearerAuth:            
      type: http
      scheme: bearer
      bearerFormat: JWT    
